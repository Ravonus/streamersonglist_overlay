<script src="/socket.io/socket.io.js"></script>
<script src="https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js"></script>

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-giJF6kkoqNQ00vy+HMDP7azOuL0xtbfIcaT9wjKHr8RbDVddVHyTfAAsrekwKmP1" crossorigin="anonymous">
    <link rel="stylesheet" type="text/css" href="css/blueAnimatedBorder.css" />

</head>

<body>

    <div id="app">

        <div v-for="(song, i) in songs" :key="song.Position">
            <div v-if="i === '0' && song['Requested By']" class="toast mx-2 px-2 py-2 my-2 box" aria-live="assertive"
                :style="`backgroundColor:${stringToHslColor(song['Requested By'], 100, 65)};`">
                <span></span>
                <span style="left: 96px;"></span>
                <span></span>
                <span style="left: -96px;"></span>

                <div class="toast-header">

                    <strong class="me-auto">{{song.Title}}</strong>
                    <small class="text-muted">{{song.Artist}}</small>

                </div>
                <div class="toast-body">
                    <div class="d-flex justify-content-between">

                        <img :src="song.logo && song.logo !== 'https://static-cdn.jtvnw.net/user-default-pictures-uv/215b7342-def9-11e9-9a66-784f43822e80-profile_image-300x300.png' && song.logo !== 'https://static-cdn.jtvnw.net/user-default-pictures-uv/ead5c8b2-a4c9-4724-b1dd-9f00b46cbd3d-profile_image-300x300.png' && song.logo !== 'https://static-cdn.jtvnw.net/user-default-pictures-uv/998f01ae-def8-11e9-b95c-784f43822e80-profile_image-300x300.png' ? song.logo  : `https://robohash.org/${song['Requested By']}?set=set4`"
                            style="height: 75px; width: 75px; border: #eceaf1; border-style: solid; box-shadow: 2px 2px 20px 2px #000000a3;"
                            class="rounded me-2" alt="img">

                        <h3 style="text-overflow: ellipsis;
                            white-space: nowrap;
                            overflow: hidden;
                            width: 200px;">
                            {{song["Requested By"]}}
                        </h3>

                        <h4 v-if="song.Amount !== '$0'"> {{song.Amount}} </h4>
                    </div>
                </div>
                {{borderColor(song['Requested By'], 100, 65)}}
            </div>

            <div v-else class="toast mx-2 px-2 py-2 my-2"
                :style="`backgroundColor:${stringToHslColor(song['Requested By'], (20 * i), ( 85 - i * i ))} !important; border: 3px solid; border-color: ${stringToHslColor(song['Requested By'], (20 * i), ( 85 - i * i ), true)} !important;`"
                role="alert" aria-live="assertive" aria-atomic="true">
                <div class="toast-header">

                    <strong class="me-auto">{{song.Title}}</strong>
                    <small class="text-muted">{{song.Artist}}</small>

                </div>
                <div class="toast-body">
                    <div class="d-flex justify-content-between">

                        <img :src="song.logo && !song.logo.includes('user-default-pictures-uv') ? song.logo : `https://robohash.org/${song['Requested By']}?set=set4`"
                            style="height: 75px; width: 75px; border: #eceaf1; border-style: solid; box-shadow: 2px 2px 20px 2px #000000a3;"
                            class="rounded me-2" alt="img">

                        <h3 style="text-overflow: ellipsis;
                            white-space: nowrap;
                            overflow: hidden;
                            width: 200px;">
                            {{song["Requested By"]}}
                        </h3>

                        <h4 v-if="song.Amount !== '$0'"> {{song.Amount}} </h4>
                    </div>
                </div>
            </div>
        </div>

    </div>


    <h2 style="display:none;" id="currentSongList">
        <%= JSON.stringify(currentSongsList) %>
    </h2>


</body>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/js/bootstrap.bundle.min.js"
    integrity="sha384-ygbV9kiqUc6oa4msXn9868pTtWMgiQaeYH7/t7LECLbyPA2x65Kgf80OJFdroafW"
    crossorigin="anonymous"></script>
<script>

    const socket = io();

    socket.on("connect", () => {
        console.log(socket.id);
    });

    socket.on("list", async (data) => {

        const keys = Object.keys(data);
        const newObj = {}
        await app.asyncForEach(keys, async (key, i) => {
            const doc = data[key];

            if (i < (app.maxSongList || 99)) {
                console.log(i, app.maxSongList)

                newObj[key] = doc;

                console.log(app.stringToHslColor(doc["Requested By"], 30, 75))

                const req = await app.fetchLogo(doc['Requested By']);

                newObj[key].logo = req.logo;

                app[key] = newObj[key]
                app.$forceUpdate();

            }

        })

        app.songs = newObj
        app.$forceUpdate();

        Vue.nextTick(() => {
            $(".toast").toast({ autohide: false, delay: 9999999999999 });
            $(".toast").toast("show");
        })

    })

</script>

<script src="/js/app.js" type="text/javascript"></script>


<% if (currentSongsList) { %>
    <script>

        let currentSongsList = JSON.parse(document.querySelector("#currentSongList").innerText);

        const keys = Object.keys(currentSongsList);
        let newObj = {};
        (async () => {
            await app.asyncForEach(keys, async (key, i) => {
                const doc = currentSongsList[key];


                console.log(i, app.maxSongList)

                newObj[key] = doc;

                const req = await app.fetchLogo(doc['Requested By']);

                newObj[key].logo = req.logo;


                currentSongsList[key] = newObj[key];

            })

            app.songs = currentSongsList;

            app.$forceUpdate()

            Vue.nextTick(() => {


                if ($(".toast")[0]) {
                    $(".toast").toast({ autohide: false, delay: 9999999999999 });
                    $(".toast").toast("show");

                }
                // fetch to next page or some code


            })

        })();



    </script>
    <% } %>


</html>